(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{141:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var o=n(1),r=n(9),i=(n(0),n(161)),a={id:"documentation",title:"Swift API",sidebar_label:"Swift API"},c={id:"documentation",title:"Swift API",description:"## API",source:"@site/docs/documentationUnity.md",permalink:"/motionAI-docu/docs/documentation",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/documentationUnity.md",sidebar_label:"Swift API",sidebar:"someSidebar",previous:{title:"How to scan for Movesense sensors?",permalink:"/motionAI-docu/docs/scan-movesense"},next:{title:"In Development",permalink:"/motionAI-docu/docs/inDevelopment"}},s=[{value:"API",id:"api",children:[{value:"Init the Evomo Sdk",id:"init-the-evomo-sdk",children:[]},{value:"Track Movements",id:"track-movements",children:[]},{value:"Log events",id:"log-events",children:[]}]}],m={rightToc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)("h3",{id:"init-the-evomo-sdk"},"Init the Evomo Sdk"),Object(i.b)("p",null,"Before tracking movement events, you must init the Evomo SDK. Here is an example of how you could do that using the Awake method of a script:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{}),'private void Awake()\n{\n    Evomo.Init(EvomoReady, "licenseID"); // Insert your licenseID as string\n}\n\nprivate void EvomoReady()\n{\n    Debug.Log("Evomo ready to track movements!");\n    //Continue with setting up your game stuff\n}\n\n')),Object(i.b)("h3",{id:"track-movements"},"Track Movements"),Object(i.b)("p",null,"Before you start tracking movements, you should subscribe to the events that you are interested in."),Object(i.b)("p",null,"here is a simple example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{}),"private void SubscribeToEvomoEvents()\n{\n    Evomo.OnLeft.AddListener(OnLeft);\n    Evomo.OnRight.AddListener(OnRight);\n    Evomo.OnJump.AddListener(OnJump);\n    Evomo.OnDuck.AddListener(OnDuck);\n}\n\nprivate void OnLeft()\n{\n    //move character left\n}\n\nprivate void OnRight()\n{\n    //move character right\n}\n\nprivate void OnJump()\n{\n    //make character jump\n}\n\nprivate void OnDuck()\n{\n    //make character duck\n}\n")),Object(i.b)("p",null,"To start and stop tracking movements, use the following methods:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{}),'Evomo.StartTracking();\n\n// use this option to define device orientation - default is buttonDown means Portrait mode with home button pointing to the ground\nEvomo.StartTracking(deviceOrientation: Evomo.DeviceOrientation.buttonRight);\n\n// use this option to define a specific classification model - default is "2115"\nEvomo.StartTracking(classificationModel: "2115");\n\nEvomo.StopTracking();\n')),Object(i.b)("h3",{id:"log-events"},"Log events"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{}),'// Log custom events\n// public static void LogEvent(string eventType, string note = "")\nEvomo.LogEvent(eventType: "something", note:"")\n\n// Log when movements should executed/classified\n// public static void LogTargetMovement(MovementType movementType, string note = "")\nEvomo.LogTargetMovement(movementType: Evomo.MovementType.jump, note: "sth")\n\n// Log for failures\n// FailureType - toLess means the movement was missing - toMuch means a movement was classified where no movement was needed\n// public static void LogFailure(EventSource source, FailureType failureType, MovementType movementType, string note = "")\nEvomo.LogTargetMovement(source: Evomo.EventSource.app, failureType: Evomo.FailureType.toLess, movementType: Evomo.MovementType.jump, note: "sth")\n\n\n')))}u.isMDXComponent=!0},161:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return v}));var o=n(0),r=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=r.a.createContext({}),u=function(e){var t=r.a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},p=function(e){var t=u(e.components);return r.a.createElement(m.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},l=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=u(n),l=o,v=p["".concat(a,".").concat(l)]||p[l]||d[l]||i;return n?r.a.createElement(v,c({ref:t},m,{components:n})):r.a.createElement(v,c({ref:t},m))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=l;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var m=2;m<i;m++)a[m]=n[m];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}l.displayName="MDXCreateElement"}}]);